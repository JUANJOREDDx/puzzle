import random

class Puzzle8:
    def __init__(self):
        self.goal_state = [1, 2, 3, 4, 5, 6, 7, 8, 0] # 0 represents the empty space
        self.state = self.goal_state.copy()
        self.shuffle()

    def shuffle(self):
        random.shuffle(self.state)
        
    def print_state(self):
        for i in range(3):
            print(self.state[i*3:i*3+3])

    def get_legal_moves(self):
        moves = []
        empty_index = self.state.index(0)
        if empty_index % 3 > 0:
            moves.append('left')
        if empty_index % 3 < 2:
            moves.append('right')
        if empty_index // 3 > 0:
            moves.append('up')
        if empty_index // 3 < 2:
            moves.append('down')
        return moves

    def move(self, direction):
        empty_index = self.state.index(0)
        if direction == 'left':
            self.state[empty_index], self.state[empty_index - 1] = self.state[empty_index - 1], self.state[empty_index]
        elif direction == 'right':
            self.state[empty_index], self.state[empty_index + 1] = self.state[empty_index + 1], self.state[empty_index]
        elif direction == 'up':
            self.state[empty_index], self.state[empty_index - 3] = self.state[empty_index - 3], self.state[empty_index]
        elif direction == 'down':
            self.state[empty_index], self.state[empty_index + 3] = self.state[empty_index + 3], self.state[empty_index]

    def is_solved(self):
        return self.state == self.goal_state


# Ejemplo de uso
if __name__ == "__main__":
    puzzle = Puzzle8()
    print("Estado inicial:")
    puzzle.print_state()
    print()

    while not puzzle.is_solved():
        moves = puzzle.get_legal_moves()
        move = random.choice(moves)
        puzzle.move(move)
        print(f"Movimiento: {move}")
        puzzle.print_state()
        print()

    print("Â¡Resuelto!")
